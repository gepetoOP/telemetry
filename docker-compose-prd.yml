services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    container_name: telemetry
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
      - OTEL_EXPORTER_OTLP_PROTOCOL=http/protobuf
      - OTEL_SERVICE_NAME=telemetry
      - OTEL_TRACES_EXPORTER=otlp
      - MICRONAUT_ENVIRONMENTS=prd
    restart: unless-stopped
    depends_on:
      - postgres
      - jaeger
      - otel-collector
      - prometheus

  postgres:
    image: postgres:15
    container_name: postgres_container
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: telemetry
      POSTGRES_PASSWORD: telemetry_password
      POSTGRES_DB: telemetry_db
    volumes:
      - postgres_data:/var/lib/postgresql/data

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    command:
      - --storage.tsdb.retention.time=1h
      - --config.file=/etc/prometheus/prometheus-config.yaml
      - --storage.tsdb.path=/prometheus
      - --web.route-prefix=/
      - --web.enable-otlp-receiver
      - --enable-feature=exemplar-storage
    volumes:
      - ./prometheus/prometheus-config.yaml:/etc/prometheus/prometheus-config.yaml
    deploy:
      resources:
        limits:
          memory: 300M
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    deploy:
      resources:
        limits:
          memory: 120M
    restart: unless-stopped

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "16686:16686"  # UI do Jaeger
      - "14250:14250"  # Endpoint para receber traces do OTLP
    environment:
      - COLLECTOR_OTLP_ENABLED=true

  otel-collector:
    image: otel/opentelemetry-collector:latest
    container_name: otel-collector
    ports:
      - "4317:4317"  # OTLP gRPC endpoint
      - "4318:4318"  # OTLP gRPC endpoint
    volumes:
      - ./otel-collector/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    depends_on:
      - jaeger
      - prometheus

volumes:
  postgres_data: