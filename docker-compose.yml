services:
  postgres:
    image: postgres:15
    container_name: postgres_container
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: telemetry
      POSTGRES_PASSWORD: telemetry_password
      POSTGRES_DB: telemetry_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

#  keycloak:
#    image: quay.io/keycloak/keycloak:latest
#    container_name: keycloak
#    environment:
#      - KC_BOOTSTRAP_ADMIN_USERNAME=admin
#      - KC_BOOTSTRAP_ADMIN_PASSWORD=admin
#      - KC_PROXY=edge
#      - KC_HOSTNAME=keycloak.localhost
#    ports:
#      - "8080:8080"
#    command:
#      - start-dev

#  prometheus:
#    image: prom/prometheus:latest
#    container_name: prometheus
#    ports:
#      - "9090:9090"
#    command:
#      - --storage.tsdb.retention.time=1h
#      - --config.file=/etc/prometheus/prometheus-config.yaml
#      - --storage.tsdb.path=/prometheus
#      - --web.route-prefix=/
#      - --web.enable-otlp-receiver
#      - --enable-feature=exemplar-storage
#    volumes:
#      - ./prometheus/prometheus-config.yaml:/etc/prometheus/prometheus-config.yaml
#    deploy:
#      resources:
#        limits:
#          memory: 300M
#    restart: unless-stopped

#  grafana:
#    image: grafana/grafana:latest
#    container_name: grafana
#    ports:
#      - "3000:3000"
#    volumes:
#      - ./grafana/provisioning/:/etc/grafana/provisioning/
#    deploy:
#      resources:
#        limits:
#          memory: 120M
#    restart: unless-stopped

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "16686:16686"  # UI do Jaeger
      - "14250:14250"  # Endpoint para receber traces do OTLP
    environment:
      - COLLECTOR_OTLP_ENABLED=true

  otel-collector:
    image: otel/opentelemetry-collector:latest
    container_name: otel-collector
    ports:
      - "4317:4317"  # OTLP gRPC endpoint
      - "4318:4318"  # OTLP gRPC endpoint
    volumes:
      - ./otel-collector/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    depends_on:
      - jaeger
#      - prometheus

volumes:
  postgres_data: